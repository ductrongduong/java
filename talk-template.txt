Awesome, let me make sure I understand the question correctly: We are given a (string). We need to find ... (Restate a problem)
For example, if the input is ..., the (longest valid substring) is ... .

Just to confirm - substrings must be continuous, right?
Is the string only lowercase letters, or also got uppercase and other characters?
By the way, how long is the input string usually? Just so I know how much I need to optimise the solution.

Okay, I’ll first try a brute-force solution just to get the idea right.
Then I’ll think about how to improve it. (...).
While doing that, I’ll keep track of the longest valid one I’ve found so far
So overall time complexity is .
But still, it’s too slow if the input length is 10⁵ — it will time out.

Can I take a minute to think about the approach? (Let’s see... trying to recall if sliding window works here.)